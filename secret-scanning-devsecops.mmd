# GitHub Advanced Security Secret Scanning Implementation

[![GitHub](https://img.shields.io/badge/github-timothywarner-black.svg?logo=github&style=flat-square)](https://github.com/timothywarner)
[![Website](https://img.shields.io/badge/🌐-TechTrainerTim.com-blue.svg?style=flat-square)](https://techtrainertim.com)
[![Pluralsight](https://img.shields.io/badge/Pluralsight-Author-red.svg?logo=pluralsight&style=flat-square)](https://www.pluralsight.com/authors/tim-warner)
[![License](https://img.shields.io/badge/License-MIT-green.svg?style=flat-square)](LICENSE)

This diagram illustrates the complete secret scanning workflow from local development through GitHub Advanced Security integration.
Created by Timothy Warner for Pluralsight GitHub Advanced Security course materials.

```mermaid
flowchart TD
    subgraph DevMachine["Developer's Machine"]
        A[Developer writes code] -->|Stages changes| B[Pre-commit Hook]
        B -->|Runs| C[TruffleHog Local Scan]
        C -->|Clean| D[Commit Allowed]
        C -->|Found Secrets| E[Commit Blocked]
        E -->|Fix| A
    end

    subgraph GitHub["GitHub Repository"]
        D -->|git push| F[Push Protection]
        F -->|Scan| G[GitHub Secret Scanning]
        
        subgraph SecretScanning["Secret Scanning Configuration"]
            H[Default Patterns]
            I[Custom Patterns]
            J[Partner Patterns]
        end

        G --> |Uses| SecretScanning
        
        G -->|Clean| K[Push Successful]
        G -->|Alert| L[Secret Found]
        
        subgraph Actions["GitHub Actions"]
            L -->|Triggers| M[Create Issue]
            M -->|Assigns| N[Security Team]
            M -->|Labels| O[Priority: High]
            M -->|Notifies| P[Slack/Email]
        end
    end

    style DevMachine fill:#e6f3ff,stroke:#333,stroke-width:2px
    style GitHub fill:#f5f5f5,stroke:#333,stroke-width:2px
    style SecretScanning fill:#fff5e6,stroke:#333,stroke-width:2px
    style Actions fill:#e6ffe6,stroke:#333,stroke-width:2px
    
    classDef alert fill:#ff9999,stroke:#333,stroke-width:2px
    classDef success fill:#99ff99,stroke:#333,stroke-width:2px
    classDef process fill:#ffff99,stroke:#333,stroke-width:2px
    
    class E alert
    class K success
    class L alert
    class C,G process
</code_block_to_apply_changes_from>
