name: Secret Scanning Alert Handler

on:
  # Run on secret scanning alerts
  repository_dispatch:
    types: [secret_scanning_alert]
  # Also run TruffleHog scan on pushes and PRs
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  trufflehog-scan:
    name: TruffleHog Secret Scan
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      - name: TruffleHog OSS
        uses: trufflesecurity/trufflehog@main
        with:
          path: ./
          base: ${{ github.event.repository.default_branch }}
          head: HEAD
          extra_args: --only-verified

  create-alert-issue:
    name: Create Alert Issue
    if: github.event_name == 'repository_dispatch' && github.event.action == 'secret_scanning_alert'
    runs-on: ubuntu-latest
    permissions:
      issues: write
      security-events: read
    steps:
      - name: Get alert details
        id: get-alert
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          ALERT_NUMBER: ${{ github.event.client_payload.alert.number }}
          REPO: ${{ github.repository }}
        run: |
          # Get alert details using GitHub CLI
          alert_info=$(gh api /repos/$REPO/secret-scanning/alerts/$ALERT_NUMBER)
          echo "secret_type=$(echo $alert_info | jq -r .secret_type)" >> $GITHUB_OUTPUT
          echo "state=$(echo $alert_info | jq -r .state)" >> $GITHUB_OUTPUT
          echo "html_url=$(echo $alert_info | jq -r .html_url)" >> $GITHUB_OUTPUT

      - name: Create issue
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          REPO: ${{ github.repository }}
        run: |
          # Create a well-formatted issue
          gh issue create \
            --title "🚨 Secret Scanning Alert: ${{ steps.get-alert.outputs.secret_type }}" \
            --body "## Secret Scanning Alert Details
            
            🔍 **Alert Type**: \`${{ steps.get-alert.outputs.secret_type }}\`
            📊 **Current State**: \`${{ steps.get-alert.outputs.state }}\`
            🔗 **Alert Link**: [${{ github.repository }}](${{ steps.get-alert.outputs.html_url }})
            
            ### Immediate Actions Required:
            1. 🔐 Verify if this is a real secret
            2. 🔄 If real, rotate the credential immediately
            3. 🔍 Check for any unauthorized usage
            4. 📝 Update the alert status in GitHub
            
            ### Best Practices:
            - Never commit secrets directly to repositories
            - Use GitHub Environment Secrets for sensitive data
            - Enable branch protection rules
            - Review the [secret scanning documentation](https://docs.github.com/code-security/secret-scanning)
            
            > 🤖 This issue was automatically created by the Secret Scanning Alert Handler workflow.
            " \
            --label "security,secret-scanning" \
            --assignee "timothywarner" 